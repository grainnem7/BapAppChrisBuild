@page "/add"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient client

@using Newtonsoft.Json
@using Data

@using Microsoft.Extensions.Logging
@inject ILogger<Search> Logger



<h1>Add App </h1>

<p>Add new App to the database </p>

<div class="container-fluid">
    <EditForm class="form-inline my-2" Model="@storeApp" OnValidSubmit="@SubmitApp">

        <label>Name of App:</label>
        <InputText class="form-control rounded" id ="name " @bind-Value="storeApp.Name" >
        </InputText>

        <InputText class="form-control rounded" id ="Catergory"  @bind-Value="storeApp.Category">
        </InputText>

        <InputText class="form-control rounded" id ="Date "  @bind-Value="storeApp.Date">
        </InputText>
        <InputNumber class="form-control rounded" id ="Price "  @bind-Value="storeApp.Price">
        </InputNumber>

        <button class="btn btn-outline-primary" type="button" >Submit</button>

    </EditForm>





</div>

@code
{
    private StoreApp storeApp = new();

    private void SubmitApp()
    {
        Logger.LogInformation("SubmitApp called");

    }
}

<div class="container-fluid">

    <div class="row justify-content-center" style="margin-bottom:50px">

    </div>

    <div class="row" style="margin:25px;">
        @if (StoreApps != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>


                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {
                        <tr class="justify-content-center">
                            <td>@storeapp.Id</td>
                            <td>@storeapp.Name</td>
                            <td>@storeapp.Rating</td>
                            <td>@storeapp.People</td>
                            <td>@storeapp.Category</td>
                            <td>@storeapp.Date</td>
                            <td>@storeapp.Price</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @if (!StoreApps.Any())
        {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>
        }
    </div>

</div>

@code {

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps/CreateApp";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}
