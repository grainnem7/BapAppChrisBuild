@page "/sort"
@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

<h1>Sort</h1>

<p>This component demonstrates sorting the dataset.</p>

<p>One way to tackle this problem;</p>
<ul>
    <li>Start with pretty much the same code as FetchStoreApps.razor.</li>
    <li>Turn your table headers into hyperlinks.</li>
    <li>When you click on the table header use a method to sort your list accordingly.</li>
    <li>StoreApps is not a simple list, it is a list of objects.</li>
    <li>You will need to search on, "sorting a list by object property"</li>
</ul>

<div class="container-fluid">

    <div class="row justify-content-center" style="margin-bottom:50px">
        <h3 class="text-center">Store Apps - Sorting</h3>
    </div>

    <div class="row" style="margin:25px;">
        @if (StoreApps != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>


                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {
                        <tr class="justify-content-center">
                            <td>@storeapp.Id</td>
                            <td>@storeapp.Name</td>
                            <td>@storeapp.Rating</td>
                            <td>@storeapp.People</td>
                            <td>@storeapp.Category</td>
                            <td>@storeapp.Date</td>
                            <td>@storeapp.Price</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @if (!StoreApps.Any())
        {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>
        }
    </div>

</div>

@code {

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps/";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}



