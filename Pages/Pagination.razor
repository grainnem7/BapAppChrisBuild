@page "/pagination"
@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

<h1>Pagination</h1>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Rating</th>
            <th>People</th>
            <th>Category</th>
            <th>Date</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var storeapp in StoreApps)
        {
            <tr class="justify-content-center">
                <td>@storeapp.Id</td>
                <td>@storeapp.Name</td>
                <td>@storeapp.Rating</td>
                <td>@storeapp.People</td>
                <td>@storeapp.Category</td>
                <td>@storeapp.Date</td>
                <td>@storeapp.Price</td>
            </tr>
        }

    </tbody>
</table>
<br />
<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item disabled">
            <span class="page-link">Previous</span>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item active" aria-current="page">
            <span class="page-link">2</span>
        </li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#">Next</a>
        </li>
    </ul>
</nav>

@code {

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps/paged";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}
